rm(list = ls())
library(jsonlite)
library(mongolite)
library(stringr)
# Load in the data into one data.frame if it has not already been loaded.
if (exists('bird.strikes') == F) {
unzip('Bird Strikes.zip')
# Escape sep = ',' in quotations
# Impute NA as empty strings
# Do not consider strings factors
bird.strikes <- read.table(
file = 'Bird Strikes.csv',
fill = T,
header = T,
na.strings = '',
quote = '\"',
sep = ',',
stringsAsFactors = F
)
}
# Replace periods with underscore, remove trailing underscore, and make lowercase.
header <- gsub('_$', '', gsub('\\.+', '_', str_trim(colnames(bird.strikes))))
header <- tolower(header)
# Replace reformatted header on bird.strike data.
colnames(bird.strikes) <- header
mongo <- mongo(collection='test',
db='test',
url='mongodb://localhost:27017',
verbose=F)
mongo$insert(bird.strikes)
query = '{
"aircraft_airline_operator": { "$in": ["AMERICAN AIRLINES", "CONTINENTAL AIRLINES"]}
}'
fields = '{
"_id": 0,
"record_id": 1,
"origin_state": 1,
"aircraft_airline_operator": 1,
"airport_name": 1
}'
records <- mongo$find(query=query, fields=fields)
cat("There are", nrow(records), "records for `AMERICAN AIRLINES`/`CONTINENTAL AIRLINES`.")
#print(head(records))
query = '{
"aircraft_airline_operator": { "$in": ["AMERICAN AIRLINES", "CONTINENTAL AIRLINES"]}
}'
fields = '{
"_id": 0,
"record_id": 1,
"origin_state": 1,
"aircraft_airline_operator": 1,
"airport_name": 1
}'
records <- mongo$find(query=query, fields=fields)
cat("There are", nrow(records), "records for `AMERICAN AIRLINES`/`CONTINENTAL AIRLINES`.")
print(head(records))
mongo$drop()
mongo$drop()
